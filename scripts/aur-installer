#!/bin/sh

usage() {
	echo "aur_installer -p %package% [ -b [ -s %N% [ -h ] ] ]"
	echo "OPTIONS "
	echo "-p, --package-name"
	echo " enable the installation of the package with the given name"
	echo "-b, --backward"
	echo " enable the installation of an old version of a package (downgrade)"
	echo "-s, --page-size"
	echo " checks the last N commits performed on the package"
	echo "-h, --help"
	echo " prints the help"
}

timestamp=$(date +%s)
suffix=latest
f_old_version=false
page_size=20

while [ "$1" != "" ]; do
    case $1 in
        -p | --package-name )	shift
                                pkg_name=$1
                                ;;
	-s | --page-size )	shift
                                page_size=$1
                                ;;
        -f | --force )		shift
                                f_force="true"
                                ;;
        -b | --backward )	shift
                                f_old_version="true"
                                ;;
        -h | --help )           usage
                                exit
                                ;;
        * )                     usage
                                exit 1
    esac
    shift
done

if [ -z ${pkg_name} ]; then
	usage
	exit 1
fi

git clone https://aur.archlinux.org/${pkg_name}.git /tmp/${pkg_name}_${suffix}
cd /tmp/${pkg_name}_${suffix}

if [ "${f_old_version}" == "true" ]; then
	# create a list with the hashes and let the user choose
	log_history=$(git log -n ${page_size} --pretty=format:'%h : %s' PKGBUILD)
	
	index=1;
	while IFS= read -r log ; do 
		echo ${index} - ${log}
		index=$((index + 1))
	done <<< "$log_history"
	
	read -p "Which revision would you like to checkout: " checkout_hash
	
	if [ ! -z ${checkout_hash} ]; then 
		suffix=${checkout_hash}
		git clone https://aur.archlinux.org/${pkg_name}.git /tmp/${pkg_name}_${suffix}

		cd /tmp/${pkg_name}_${suffix}
		git reset --hard ${checkout_hash}
		
		rm -rf /tmp/${pkg_name}_latest
	fi
fi

makepkg --syncdeps

if [ "${f_force}" == "true" ]; then
  makepkg --skipinteg --skippgpcheck --install 
else
  makepkg --install
fi
#makepkg --skipinteg --skippgpcheck --install

read -p "Do you wish to clean the temproray folder for ${pkg_name}? [Y/n]" yn
case $yn in
  [Yy]* ) rm -rf /tmp/${pkg_name}_${suffix}; break;;
  [Nn]* ) exit;;
      * ) echo "Please answer yes or no.";;
esac

exit 0
